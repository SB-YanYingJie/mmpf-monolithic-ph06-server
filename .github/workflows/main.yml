# This is a basic workflow to help you get started with Actions

name: Lint and Test

on: push


jobs:
  lint:
    name: golangci-lint
    runs-on: ubuntu-20.04

    steps:
       # secrets.PRIVATE_REPO_ACCESS_TOKEN must be set per repository or Organization https://docs.github.com/ja/actions/security-guides/encrypted-secrets
      - name: Give access right to GitHub Actions
        run: git config --global url."https://${{ secrets.PRIVATE_REPO_ACCESS_TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"

      - uses: actions/checkout@v2

      - name: Login to GitHub container repository
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.PRIVATE_REPO_USERNAME }}
          password: ${{ secrets.PRIVATE_REPO_ACCESS_TOKEN }}

      - uses: actions/checkout@v2

      - name: docker-compose up
        env:
          DOCKER_BUILDKIT: 1
          TOKEN: ${{ secrets.PRIVATE_REPO_ACCESS_TOKEN }}
        run: |
          echo $TOKEN >> .token
          make docker_compose_up
          rm .token
        working-directory: ./

      - name: Run Lint
        run: make run_lint_in_cicontainer
        working-directory: ./

      - name: Run docker-compose down
        if: always()
        run: make docker_compose_down
        working-directory: ./

  test:
    name: go test with coverage
    runs-on: ubuntu-20.04

    steps:
       # secrets.PRIVATE_REPO_ACCESS_TOKEN must be set per repository or Organization https://docs.github.com/ja/actions/security-guides/encrypted-secrets
      - name: Give access right to GitHub Actions
        run: git config --global url."https://${{ secrets.PRIVATE_REPO_ACCESS_TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"

      - name: Login to GitHub container repository
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.PRIVATE_REPO_USERNAME }}
          password: ${{ secrets.PRIVATE_REPO_ACCESS_TOKEN }}

      - uses: actions/checkout@v2

      - name: docker-compose up
        env:
          DOCKER_BUILDKIT: 1
          TOKEN: ${{ secrets.PRIVATE_REPO_ACCESS_TOKEN }}
        run: |
          echo $TOKEN >> .token
          make docker_compose_up
          rm .token
        working-directory: ./

      - name: Run Unit Test
        run: make run_unit_test_in_cicontainer
        working-directory: ./

      - name: generate html coverage report
        run: go tool cover -html=coverage.out -o cover.html
        working-directory: ./

      - name: Upload coverage report
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: ./cover.html
          retention-days: 1

      - name: Run docker-compose down
        if: always()
        run: make docker_compose_down
        working-directory: ./

