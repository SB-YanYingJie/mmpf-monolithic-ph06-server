// Code generated by MockGen. DO NOT EDIT.
// Source: ./domain/grpc_validator.go

// Package mock_domain is a generated GoMock package.
package mock_domain

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	golang "github.com/machinemapplatform/grpc-interface/golang"
	model "github.com/machinemapplatform/mmpf-monolithic/internal/model"
)

// MockGrpcValidatorInterface is a mock of GrpcValidatorInterface interface.
type MockGrpcValidatorInterface struct {
	ctrl     *gomock.Controller
	recorder *MockGrpcValidatorInterfaceMockRecorder
}

// MockGrpcValidatorInterfaceMockRecorder is the mock recorder for MockGrpcValidatorInterface.
type MockGrpcValidatorInterfaceMockRecorder struct {
	mock *MockGrpcValidatorInterface
}

// NewMockGrpcValidatorInterface creates a new mock instance.
func NewMockGrpcValidatorInterface(ctrl *gomock.Controller) *MockGrpcValidatorInterface {
	mock := &MockGrpcValidatorInterface{ctrl: ctrl}
	mock.recorder = &MockGrpcValidatorInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGrpcValidatorInterface) EXPECT() *MockGrpcValidatorInterfaceMockRecorder {
	return m.recorder
}

// ValidateSlamRequest mocks base method.
func (m *MockGrpcValidatorInterface) ValidateSlamRequest(ctx context.Context, rawRequest *golang.SlamRequest) (*model.SlamRequest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateSlamRequest", ctx, rawRequest)
	ret0, _ := ret[0].(*model.SlamRequest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateSlamRequest indicates an expected call of ValidateSlamRequest.
func (mr *MockGrpcValidatorInterfaceMockRecorder) ValidateSlamRequest(ctx, rawRequest interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateSlamRequest", reflect.TypeOf((*MockGrpcValidatorInterface)(nil).ValidateSlamRequest), ctx, rawRequest)
}
