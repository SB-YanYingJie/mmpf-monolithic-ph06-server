// Code generated by MockGen. DO NOT EDIT.
// Source: image_validator.go

// Package mock_domain is a generated GoMock package.
package mock_domain

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	gocv "gocv.io/x/gocv"
)

// MockImageValidatorInterface is a mock of ImageValidatorInterface interface.
type MockImageValidatorInterface struct {
	ctrl     *gomock.Controller
	recorder *MockImageValidatorInterfaceMockRecorder
}

// MockImageValidatorInterfaceMockRecorder is the mock recorder for MockImageValidatorInterface.
type MockImageValidatorInterfaceMockRecorder struct {
	mock *MockImageValidatorInterface
}

// NewMockImageValidatorInterface creates a new mock instance.
func NewMockImageValidatorInterface(ctrl *gomock.Controller) *MockImageValidatorInterface {
	mock := &MockImageValidatorInterface{ctrl: ctrl}
	mock.recorder = &MockImageValidatorInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockImageValidatorInterface) EXPECT() *MockImageValidatorInterfaceMockRecorder {
	return m.recorder
}

// ValidateImageSize mocks base method.
func (m *MockImageValidatorInterface) ValidateImageSize(ctx context.Context, mat *gocv.Mat) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateImageSize", ctx, mat)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateImageSize indicates an expected call of ValidateImageSize.
func (mr *MockImageValidatorInterfaceMockRecorder) ValidateImageSize(ctx, mat interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateImageSize", reflect.TypeOf((*MockImageValidatorInterface)(nil).ValidateImageSize), ctx, mat)
}
